name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set environment variables for main
        if: github.ref == 'refs/heads/main'
        run: |
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER_PROD }}" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD_PROD }}" >> $GITHUB_ENV
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB_PROD }}" >> $GITHUB_ENV

      - name: Set environment variables for dev
        if: github.ref == 'refs/heads/dev'
        run: |
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER_DEV }}" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD_DEV }}" >> $GITHUB_ENV
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB_DEV }}" >> $GITHUB_ENV

      - name: Set up common environment variables
        run: |
          echo "DISCORD_CLIENT_ID=${{ secrets.DISCORD_CLIENT_ID }}" >> $GITHUB_ENV
          echo "DISCORD_CLIENT_SECRET=${{ secrets.DISCORD_CLIENT_SECRET }}" >> $GITHUB_ENV

      - name: Build and push Docker images for main
        if: github.ref == 'refs/heads/main'
        run: |
          docker compose -f docker-compose.production.yml build
          docker compose -f docker-compose.production.yml push

      - name: Build and push Docker images for dev
        if: github.ref == 'refs/heads/dev'
        run: |
          docker compose -f docker-compose.staging.yml build
          docker compose -f docker-compose.staging.yml push

      - name: Set up SSH Key
        run: |
          echo "${{ secrets.DO_SSH_KEY }}" | tr -d '\r' > key.pem
          chmod 600 key.pem
          eval "$(ssh-agent -s)"
          ssh-add key.pem
          
      - name: Deploy to DigitalOcean
        env:
          DO_SSH_KEY: ${{ secrets.DO_SSH_KEY }}
          DO_HOST: ${{ vars.DO_HOST }}
          NODE_ENV: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
          POSTGRES_USER: ${{ github.ref == 'refs/heads/main' && secrets.POSTGRES_USER_PROD || secrets.POSTGRES_USER_DEV }}
          POSTGRES_PASSWORD: ${{ github.ref == 'refs/heads/main' && secrets.POSTGRES_PASSWORD_PROD || secrets.POSTGRES_PASSWORD_DEV }}
          POSTGRES_DB: ${{ github.ref == 'refs/heads/main' && secrets.POSTGRES_DB_PROD || secrets.POSTGRES_DB_DEV }}
          BRANCH: ${{ github.ref == 'refs/heads/main' && 'main' || 'dev' }}
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem root@${DO_HOST} << EOF
            cd nestris.org
            git checkout ${BRANCH}
            git pull origin ${BRANCH}
            export NODE_ENV=${NODE_ENV}
            export POSTGRES_USER=${POSTGRES_USER}
            export POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            export POSTGRES_DB=${POSTGRES_DB}
            export DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
            export DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}
            docker compose -p ${NODE_ENV} -f docker-compose.${NODE_ENV}.yml pull
            docker compose -p ${NODE_ENV} -f docker-compose.${NODE_ENV}.yml up -d

          EOF

      - name: Finish main
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Finished deploying to production ðŸš€! Website deployed at http://138.197.82.78:80"
      
      - name: Finish dev
        if: github.ref == 'refs/heads/dev'
        run: |
          echo "Finished deploying to staging ðŸš€! Website deployed at http://138.197.82.78:81"